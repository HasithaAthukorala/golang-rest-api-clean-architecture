// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package authenticator

import (
	"sync"
)

// Ensure, that AuthenticationClientMock does implement AuthenticationClient.
// If this is not the case, regenerate this file with moq.
var _ AuthenticationClient = &AuthenticationClientMock{}

// AuthenticationClientMock is a mock implementation of AuthenticationClient.
//
// 	func TestSomethingThatUsesAuthenticationClient(t *testing.T) {
//
// 		// make and configure a mocked AuthenticationClient
// 		mockedAuthenticationClient := &AuthenticationClientMock{
// 			AuthenticateFunc: func(token string) bool {
// 				panic("mock out the Authenticate method")
// 			},
// 		}
//
// 		// use mockedAuthenticationClient in code that requires AuthenticationClient
// 		// and then make assertions.
//
// 	}
type AuthenticationClientMock struct {
	// AuthenticateFunc mocks the Authenticate method.
	AuthenticateFunc func(token string) bool

	// calls tracks calls to the methods.
	calls struct {
		// Authenticate holds details about calls to the Authenticate method.
		Authenticate []struct {
			// Token is the token argument value.
			Token string
		}
	}
	lockAuthenticate sync.RWMutex
}

// Authenticate calls AuthenticateFunc.
func (mock *AuthenticationClientMock) Authenticate(token string) bool {
	if mock.AuthenticateFunc == nil {
		panic("AuthenticationClientMock.AuthenticateFunc: method is nil but AuthenticationClient.Authenticate was just called")
	}
	callInfo := struct {
		Token string
	}{
		Token: token,
	}
	mock.lockAuthenticate.Lock()
	mock.calls.Authenticate = append(mock.calls.Authenticate, callInfo)
	mock.lockAuthenticate.Unlock()
	return mock.AuthenticateFunc(token)
}

// AuthenticateCalls gets all the calls that were made to Authenticate.
// Check the length with:
//     len(mockedAuthenticationClient.AuthenticateCalls())
func (mock *AuthenticationClientMock) AuthenticateCalls() []struct {
	Token string
} {
	var calls []struct {
		Token string
	}
	mock.lockAuthenticate.RLock()
	calls = mock.calls.Authenticate
	mock.lockAuthenticate.RUnlock()
	return calls
}
